---

# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
  :release_build: TRUE
  :test_file_prefix: test_
  :which_ceedling: gem
  :ceedling_version: 0.31.1
  :default_tasks:
    - test:all

#:test_build:
#  :use_assembly: TRUE

:release_build:
  :output: smart-home-system
  :use_assembly: TRUE

:environment:
  - :path:
    - /home/meijiman/gcc-arm-none-eabi-10.3-2021.10/bin
    - "#{ENV['PATH']}"

:extension:
  :executable: .elf

:paths:
  :test:
    - +:test/**
    - -:test/support
  :source:
    - src/**
  :support:
    - test/support
  :libraries: []
  :release_toolchain_include:
    - Drivers/CMSIS/Device/ST/STM32F1xx/Include
    - Drivers/CMSIS/Include
  :include:
    - inc/**

:files:
  :assembly:
    - startup_stm32f103xb.s

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :common: &common_defines []
  :test:
    - *common_defines
    - TEST
  :test_preprocess:
    - *common_defines
    - TEST
  :release:
    - STM32F103xB

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8

# Add -gcov to the plugins list to make sure of the gcov plugin
# You will need to have gcov and gcovr both installed to make it work.
# For more information on these options, see docs in plugins/gcov
:gcov:
  :reports:
    - HtmlDetailed
  :gcovr:
    :html_medium_threshold: 75
    :html_high_threshold: 90

#:tools:
# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use
:tools:
  :release_compiler:
    :executable: arm-none-eabi-gcc
    :arguments:
      - -c # Compile source file, but do not link
      - -mcpu=cortex-m3 -mthumb
      - -D"$": COLLECTION_DEFINES_RELEASE_AND_VENDOR
      - -I"$": COLLECTION_PATHS_RELEASE_TOOLCHAIN_INCLUDE
      - -I"$": COLLECTION_PATHS_INCLUDE
      - -Og # Optimization
      - -Wall # Enable full warnings
      - -fdata-sections -ffunction-sections # Place each function or data item into its own section in the output file if the target supports arbitrary sections
      - -g -gdwarf-2 # Produce debugging information in DWARF version 2 format 
      - -MMD -MP -MF"${4}" # Generate dependency information
      - -Wa,-a,-ad,-alms=${3} # Output list
      - ${1} # Input source
      - -o ${2} # Output object
  :release_assembler:
    :executable: arm-none-eabi-gcc
    :arguments:
      - -x assembler-with-cpp
      - -c # Assemble source file, but do not link
      - -mcpu=cortex-m3 -mthumb
      - -D"$": COLLECTION_DEFINES_RELEASE_AND_VENDOR
      - -I"$": COLLECTION_PATHS_RELEASE_TOOLCHAIN_INCLUDE
      - -Og -Wall -fdata-sections -ffunction-sections -g -gdwarf-2
      - ${1} # Input assembly source
      - -o ${2} # Output object
  :release_linker:
    :executable: arm-none-eabi-gcc
    :arguments:
      - ${1} # Input objects
      - -mcpu=cortex-m3 -mthumb
      - -specs=nano.specs
      - -TSTM32F103C8Tx_FLASH.ld # Link script
      - -Wl,-Map=${3},--cref -Wl,--gc-sections # Output map
      - ${4} # Library list
      - -o ${2}.elf # Output binary

# LIBRARIES
# These libraries are automatically injected into the build process. Those specified as
# common will be used in all types of builds. Otherwise, libraries can be injected in just
# tests or releases. These options are MERGED with the options in supplemental yaml files.
:libraries:
  :placement: :end
  :flag: "-l${1}"
  :path_flag: "-L ${1}"
  :system:    # for example, you might list 'm' to grab the math library
    - c
    - m
    - nosys
  :test: []
  :release:

:plugins:
  :load_paths:
    - "#{Ceedling.load_path}"
  :enabled:
    - stdout_pretty_tests_report
    - module_generator
    - gcov

:module_generator:
  :inc_root: inc/
...
